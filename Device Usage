function Get-CpuUsage {
    $cpuCounter = Get-Counter '\Processor(_Total)\% Processor Time'
    [math]::Round($cpuCounter.CounterSamples[0].CookedValue, 2)
}

function Get-RamUsage {
    $ram = Get-WmiObject Win32_OperatingSystem
    $totalRam = $ram.TotalVisibleMemorySize * 1KB  # Convert to bytes
    $freeRam = $ram.FreePhysicalMemory * 1KB  # Convert to bytes
    $usedRam = $totalRam - $freeRam
    $ramUsagePercentage = ($usedRam / $totalRam) * 100

    $usedRamGB = $usedRam / 1GB
    $totalRamGB = $totalRam / 1GB

    @{
        "UsagePercentage" = [math]::Round($ramUsagePercentage, 2)
        "UsedMemoryBytes" = $usedRam
        "UsedMemoryGB" = [math]::Round($usedRamGB, 2)
        "TotalMemoryGB" = [math]::Round($totalRamGB, 2)
    }
}


function Get-StorageUsage {
    $drives = Get-WmiObject Win32_LogicalDisk | Where-Object { $_.DriveType -eq 3 }

    $usageInfo = foreach ($drive in $drives) {
        $totalSpace = $drive.Size
        $freeSpace = $drive.FreeSpace
        $usedSpace = $totalSpace - $freeSpace

        $usedSpacePercentage = ($usedSpace / $totalSpace) * 100
        $freeSpacePercentage = 100 - $usedSpacePercentage

        $usedSpaceGB = $usedSpace / 1GB
        $freeSpaceGB = $freeSpace / 1GB
        $totalSpaceGB = $totalSpace / 1GB

        @{
            "Drive" = $drive.DeviceID
            "UsedSpacePercentage" = [math]::Round($usedSpacePercentage, 2)
            "FreeSpacePercentage" = [math]::Round($freeSpacePercentage, 2)
            "FreeSpaceGB" = [math]::Round($freeSpaceGB, 2)
            "TotalSpaceGB" = [math]::Round($totalSpaceGB, 2)
        }
    }

    return $usageInfo
}



function Add-WordText {
    param(
        [Parameter(Mandatory = $true)]
        [Microsoft.Office.Interop.Word.Document] $Document,

        [Parameter(Mandatory = $true)]
        [string] $Text,

        [Parameter()]
        [int] $FontSize = 12,

        [Parameter()]
        [switch] $Bold
    )

    $selection = $Document.Application.Selection
    $selection.Font.Bold = $Bold
    $selection.Font.Size = $FontSize
    $selection.TypeText($Text)
    $selection.TypeParagraph()
}

# Main script
$wordDocPath = "C:\temp\DeviceUsage.docx"

# Get device usage information
$cpuUsage = Get-CpuUsage
$ramInfo = Get-RamUsage
$ramUsagePercentage = $ramInfo.UsagePercentage
$usedRamGB = $ramInfo.UsedMemoryGB
$totalRamGB = $ramInfo.TotalMemoryGB
$storageUsage = Get-StorageUsage

# Create and populate the Word document
$wordApp = New-Object -ComObject Word.Application
$doc = $wordApp.Documents.Add()

Add-WordText -Document $doc -Text "Device Usage Information" -FontSize 20 -Bold
Add-WordText -Document $doc -Text "Timestamp: $(Get-Date)" -FontSize 12
Add-WordText -Document $doc -Text "CPU Usage (%): $cpuUsage" -FontSize 12

$ramUsageText = "RAM Usage (%): $ramUsagePercentage or $usedRamGB GB's used of $totalRamGB GB's"
Add-WordText -Document $doc -Text $ramUsageText -FontSize 12

$storageUsageText = "Storage Usage (%): $($storageUsage.UsedSpacePercentage) or $($storageUsage.FreeSpaceGB) GB's free of $($storageUsage.TotalSpaceGB) GB's"
Add-WordText -Document $doc -Text $storageUsageText -FontSize 12

# Save the Word document and close Word application
$doc.SaveAs([ref]$wordDocPath)
$doc.Close()
$wordApp.Quit()

# Release resources
[System.Runtime.Interopservices.Marshal]::ReleaseComObject($wordApp) | Out-Null
Remove-Variable wordApp

Write-Host "Device usage information has been gathered and saved to: $wordDocPath"
